[{"C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\index.js":"1","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\grid\\components\\App.js":"2","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\grid\\components\\GridApp.js":"3","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\vis\\components\\VisApp.js":"4","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\grid\\components\\Projects.js":"5","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\data\\projectsData.js":"6","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\vis\\components\\Gallery.js":"7"},{"size":201,"mtime":1612144221304,"results":"8","hashOfConfig":"9"},{"size":1084,"mtime":1621892281372,"results":"10","hashOfConfig":"9"},{"size":5421,"mtime":1665425636338,"results":"11","hashOfConfig":"9"},{"size":19796,"mtime":1665377922287,"results":"12","hashOfConfig":"9"},{"size":688,"mtime":1616355937469,"results":"13","hashOfConfig":"9"},{"size":68369,"mtime":1665425870458,"results":"14","hashOfConfig":"9"},{"size":501,"mtime":1621809659990,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"17b05th",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":6,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\index.js",[],["35","36"],"C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\grid\\components\\App.js",["37","38","39","40","41","42","43","44","45","46"],"import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport 'jquery/dist/jquery.js';\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile\n} from \"react-device-detect\"; \nimport gridlogo from\"../../buttons/grid.png\";\nimport viewlogo from\"../../buttons/vis.png\";\nimport VisApp from \"../../vis/components/VisApp\";\nimport GridApp from \"../../grid/components/GridApp\"\n\n\nconst App = () => {\n    return (\n      <Router>\n        <Home />\n        <Switch>\n        <Route exact path=\"/\" component={GridApp}/>\n        <Route exact path=\"/vis\" component={VisApp}/>\n        </Switch>\n      </Router>\n  )\n}\n\nconst Home = () => (\n  <div className=\"navButtonsContainer\">\n    <Link to='/vis'>\n    <a id=\"visLink\">\n    <img src={viewlogo} alt=\"vis view\" className=\"navButtons\" id=\"visNav\"></img>\n    </a>\n    </Link>\n    <Link to='/'>\n    <a id=\"gridLink\">\n      <img src= {gridlogo} alt=\"grid view\" className=\"navButtons\" id=\"gridNav\"></img>\n    </a>\n    </Link>\n  </div>\n)\n\nexport default App;\n","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\grid\\components\\GridApp.js",["47","48"],"C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\vis\\components\\VisApp.js",["49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport '../css/vis.css';\r\nimport 'jquery/dist/jquery.js';\r\nimport * as d3 from \"d3\";\r\nimport rawData from '../../data/projectsData';\r\nimport Gallery from './Gallery'\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nconst VisApp = (props) => {\r\n  const visref = useRef()\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [projects, setProjects] = useState([]);\r\n  const [filterproject, setFilterProject] = useState(false);\r\n  const [dimensions, setDimensions] = useState({\r\n      documentWidth: window.innerWidth > 400? window.innerWidth:400,\r\n      documentHeight: (window.innerHeight - 500) > 400? window.innerHeight - 500:400\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n      var margin = {top: 50, right: 50, bottom: dimensions.documentHeight/6, left: 50}\r\n      var width = dimensions.documentWidth - margin.left - margin.right\r\n      var height = dimensions.documentHeight - margin.top - margin.bottom;\r\n\r\n      //map data\r\n      const projdata = (data) => \r\n        data.map((d) => {\r\n          const title = d.title\r\n          const subtitle = d.subtitle\r\n          const startDate = new Date(d.start)\r\n          const endDate = new Date(d.end)\r\n          const kind = d.kind\r\n          const program = d.program\r\n          const collaboratorname = d.collaboratorname\r\n          const collaboratorlink = d.collaboratorlink\r\n          const description = d.description\r\n          const image = d.image\r\n          const link = d.link\r\n          return {\r\n            title,\r\n            subtitle,\r\n            startDate,\r\n            endDate,\r\n            kind,\r\n            program,\r\n            collaboratorname,\r\n            description,\r\n            image,\r\n            link,\r\n            collaboratorlink\r\n          }\r\n        })\r\n      \r\n      const projectdata = projdata(rawData)\r\n\r\n      //get programs\r\n      const programsData = [...d3.rollup(\r\n        projectdata,\r\n        v => v.length,\r\n        d => d.program\r\n      )].map(d => {\r\n        return {\r\n          title: d[0],\r\n          image: [],\r\n          startDate: projectdata\r\n            .filter(x => x.program === d[0])\r\n            .reduce((date,x) => {\r\n              if (date === null || x.startDate < date) return x.startDate;\r\n              return date;\r\n            }, null)\r\n            ,\r\n          endDate: projectdata\r\n            .filter(x => x.program === d[0])\r\n            .reduce((date,x) => {\r\n              if (date === null || x.endDate > date) return x.endDate;\r\n              return date;\r\n            }, null),\r\n            kind: \"program\"\r\n        }\r\n      })\r\n\r\n      const data = projectdata.concat(programsData)\r\n\r\n      const iterate = ((item, index) => {\r\n        item.id = index + 1\r\n      })\r\n\r\n      data.forEach(iterate)\r\n\r\n      //get min and max Date\r\n      const startDates = []\r\n      const endDates = []\r\n\r\n      for (var i = 0; i < projectdata.length; i++) {\r\n        startDates.push(new Date(projectdata[i].startDate))\r\n        endDates.push(new Date(projectdata[i].endDate))\r\n      }\r\n      const minDate = new Date(Math.min.apply(null,startDates))\r\n      const maxDate = new Date(Math.max.apply(null,endDates))\r\n\r\n      setProjects(data)\r\n\r\n      const linesMouseover = d => {\r\n        var str = ('#' + d.target.id)\r\n        d3.selectAll(str)\r\n        .style('font-weight', '900');\r\n      }\r\n\r\n      const linesMouseout = d => {\r\n        var str = ('#' + d.target.id)\r\n        d3.selectAll(str)\r\n        .style('font-weight', '300');\r\n      }\r\n\r\n      //set clicked project for Description\r\n\r\n      const linesClick = d => { \r\n        var str = d.target.className.baseVal\r\n        var n = str.search(\"undefined\")\r\n        if(n === -1) {\r\n        let t = d3.transition()\r\n        .duration(500);\r\n        let selection = []\r\n        for (var i = 0; i < data.length; i++) {\r\n          if(d.target.innerHTML === data[i].title) {\r\n            setFilterProject(data[i])\r\n            selection = data[i]\r\n          }\r\n        }\r\n        setLoading(true)\r\n\r\n\r\n        d3.selectAll('.timelineText')\r\n        .transition(t)\r\n        .style('opacity', d => {\r\n          if(d.program !== selection.program && d.title !== selection.program) { \r\n            return .4 \r\n          }\r\n          else { \r\n            return 1 \r\n          }\r\n        })\r\n        d3.selectAll('.timelineBars')\r\n        .transition(t)\r\n        .attr('height', d => {\r\n          if(d.program !== selection.program && d.title !== selection.program) {\r\n            return 1\r\n           }\r\n          else {\r\n             return 6 \r\n          }\r\n        })\r\n      } else {\r\n        let t = d3.transition()\r\n        .duration(500);\r\n        d3.selectAll('.timelineText')\r\n        .transition(t)\r\n        .style('opacity', 1)\r\n\r\n        d3.selectAll('.timelineBars')\r\n        .transition(t)\r\n        .attr('height', d => {\r\n          if (d.kind !== \"program\") {\r\n            return 3;\r\n          } else {\r\n            return 1;\r\n          }\r\n        })\r\n        setFilterProject(false)\r\n      }\r\n    }\r\n\r\n\r\n      var svg = d3.select(visref.current)\r\n      .append(\"svg\")\r\n      .attr(\"id\", \"visSVG\")\r\n      .attr(\"width\", width + margin.left+ margin.right )\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n\r\n      //scales\r\n      var xScale = d3.scaleTime()\r\n      .domain([minDate, maxDate])\r\n      .range([0, width]);\r\n\r\n      var yLineScale = d3.scaleLinear()\r\n      .domain([0, data.length])\r\n      .range([0, height]);\r\n\r\n      var levelsNum;\r\n\r\n    //setup\r\n    const bgGroup = svg.append(\"g\").attr('id', 'bgGroup');\r\n    const netGroup = svg.append(\"g\").attr('id', 'netGroup');\r\n    const rectGroup = svg.append(\"g\").attr('id', 'rectGroup');\r\n    const pointGroup = svg.append(\"g\").attr('id', 'pointGroup');\r\n    const textGroup = svg.append(\"g\").attr('id', 'textGroup');\r\n\r\n      var pointEdgeGradient = svg.append(\"defs\")\r\n    .append(\"linearGradient\")\r\n    .attr(\"id\", \"pointEdgeGradient\")\r\n    .attr(\"x1\", \"0%\")\r\n    .attr(\"y1\", \"0%\")\r\n    .attr(\"x2\", \"0%\")\r\n    .attr(\"y2\", \"100%\");\r\n\r\npointEdgeGradient.append(\"stop\")\r\n    .attr(\"offset\", \"0%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .6);\r\n\r\npointEdgeGradient.append(\"stop\")\r\n    .attr(\"offset\", \"20%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .05);\r\n \r\npointEdgeGradient.append(\"stop\")\r\n    .attr(\"offset\", \"80%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .05);\r\n\r\npointEdgeGradient.append(\"stop\")\r\n    .attr(\"offset\", \"100%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .6);\r\n\r\nvar lineEdgeGradient = svg.append(\"defs\")\r\n    .append(\"linearGradient\")\r\n    .attr(\"id\", \"lineEdgeGradient\")\r\n    .attr(\"x1\", \"0%\")\r\n    .attr(\"y1\", \"0%\")\r\n    .attr(\"x2\", \"0%\")\r\n    .attr(\"y2\", \"100%\");\r\n\r\nlineEdgeGradient.append(\"stop\")\r\n    .attr(\"offset\", \"0%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .6);\r\n\r\nlineEdgeGradient.append(\"stop\")\r\n    .attr(\"offset\", \"20%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .05);\r\n\r\nlineEdgeGradient.append(\"stop\")\r\n    .attr(\"offset\", \"90%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .05);\r\n\r\nlineEdgeGradient.append(\"stop\")\r\n    .attr(\"offset\", \"100%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .6);\r\n\r\nvar projectGradient = svg.append(\"defs\")\r\n    .append(\"linearGradient\")\r\n    .attr(\"id\", \"projectGradient\")\r\n    .attr(\"x1\", \"0%\")\r\n    .attr(\"y1\", \"0%\")\r\n    .attr(\"x2\", \"100%\")\r\n    .attr(\"y2\", \"0%\");\r\n\r\nprojectGradient.append(\"stop\")\r\n    .attr(\"offset\", \"0%\")\r\n    .attr(\"stop-color\", \"#fff\")\r\n    .attr(\"stop-opacity\", 0);\r\n\r\nprojectGradient.append(\"stop\")\r\n    .attr(\"offset\", \"100%\")\r\n    .attr(\"stop-color\", \"#000\")\r\n    .attr(\"stop-opacity\", .8);\r\n/*\r\n    var t1 = textures.lines().size(2).strokeWidth(.5), //.orientation(\"1/8\"),\r\n    t2 = textures.lines().size(2.5).strokeWidth(1), //.orientation(\"2/8\"),\r\n    t3 = textures.lines().size(3).strokeWidth(1), //.orientation(\"3/8\"),\r\n    t4 = textures.lines().size(3.5).strokeWidth(1), //.orientation(\"4/8\"),\r\n    t5 = textures.lines().size(4).strokeWidth(1), //.orientation(\"5/8\"),\r\n    t6 = textures.lines().size(4.5).strokeWidth(1), //.orientation(\"6/8\"),\r\n    t7 = textures.lines().size(5).strokeWidth(1); //.orientation(\"7/8\");\r\n\r\n\r\nvar t = [t1, t2, t3, t4, t5, t6, t7];\r\n\r\n\r\nfor (var i = 0; i < t.length; i++) {\r\n    svg.call(t[i]);\r\n*/\r\n      // Create Rect\r\n\r\n      rectGroup.selectAll('.timelineBars')\r\n      .data(data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('id', d => { return d.title })\r\n      .attr('class', d => { return d.subtitle + ' timelineBars ' + d.title })\r\n      .attr('x', d => { return xScale(d.startDate) })\r\n      .attr('y', d => { return yLineScale(d.id) })\r\n      .attr('width', d => { return xScale(d.endDate)-xScale(d.startDate) })\r\n      .attr('height', d => {\r\n        if (d.kind !== \"program\") {\r\n          return 3;\r\n        } else {\r\n          return 1;\r\n        }\r\n      })\r\n      .attr(\"fill\", d => {\r\n        if (d.kind !== 'program') {\r\n          return \"url(#projectGradient)\";\r\n        } else {\r\n          return 'rgba(0,0,0,1)' \r\n        }\r\n      })\r\n\r\n      //initial load transition\r\n      .style('opacity', 0)\r\n      .transition()\r\n      .ease(d3.easeLinear)\r\n      .duration(1000)\r\n      .delay( d => { return xScale(d.startDate)*1})\r\n      .style('opacity', 1)\r\n      \r\n      \r\n      textGroup.selectAll('.timelineText')\r\n      .data(data)\r\n      .enter()\r\n      .append('text')\r\n      .attr('id', d => { return d.title.replace(/\\s/g,'-') })\r\n      .attr('class', d => { return d.subtitle + ' timelineText ' + d.title + ' ' + d.program; })\r\n      .attr(\"transform\", d => { \r\n        if (d.kind !== 'program') {\r\n          return \"translate(\"+ (xScale(d.endDate)-3)+\",\"+(yLineScale(d.id)-2)+\") rotate(22.5)\"\r\n        } else {\r\n          return \"translate(\"+ xScale(d.endDate)+\",\"+(yLineScale(d.id)-4)+\") rotate(0)\"\r\n        }\r\n      })\r\n      .text( d => { return d.title })\r\n      .on('mouseover', linesMouseover)\r\n      .on('mouseout', linesMouseout)\r\n      .on(\"click\", linesClick)\r\n\r\n      //initial load transition\r\n      .style('opacity', 0)\r\n      .transition()\r\n      .ease(d3.easeLinear)\r\n      .duration(1000)\r\n      .delay( d => { return xScale(d.startDate)*1})\r\n      .style('opacity', 1)\r\n      \r\n      var rectHeight = height / levelsNum;\r\n      \r\n      rectGroup.selectAll('.timelineRect')\r\n      .data(data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('id', function(d) { return d.id })\r\n      .attr('class', 'timelineRect')\r\n      .attr('class', function(d) { return 'timelineRect ' + d.connections; })\r\n      .attr('x', function(d) { return xScale(d.startDateOffset) })\r\n      .attr('y', function(d) {\r\n        if (d.kind == 'program') {\r\n          return yLineScale(d.yPos)-rectHeight;\r\n        } else {\r\n          return  yLineScale(d.yPos)-rectHeight/2;\r\n        }\r\n      })\r\n      .attr('width', function(d) { return xScale(d.endDate)-xScale(d.startDateOffset) })\r\n      .attr('height', function(d) {\r\n        if (d.kind == 'program') {\r\n          return rectHeight;\r\n        } else {\r\n          return  rectHeight/2;\r\n        }\r\n      })\r\n      .attr(\"fill\", d => { return 'rgba(0,0,0,0)'; })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n      const handleResize = () => {\r\n        setDimensions({\r\n          documentWidth: window.innerWidth > 400? window.innerWidth:400,\r\n          documentHeight: (window.innerHeight - 500) > 400? window.innerHeight - 500:400\r\n        })};\r\n\r\n        setTimeout(updateVis, 4000)\r\n        window.addEventListener(\"resize\", handleResize);\r\n        //document.body.addEventListener(\"onresize\", handleResize);\r\n\r\n        return () => {\r\n          window.removeEventListener(\"resize\", handleResize);\r\n          //document.body.addEventListener(\"onresize\", handleResize);\r\n\r\n          }}, [dimensions])\r\n\r\n    const updateVis = () => {\r\n\r\n      var margin = {top: 50, right: 50, bottom: dimensions.documentHeight/6, left: 50}\r\n      var width = dimensions.documentWidth - margin.left - margin.right\r\n      var height = dimensions.documentHeight - margin.top - margin.bottom;\r\n\r\n       //map data\r\n       const projdata = (data) => \r\n       data.map((d) => {\r\n         const title = d.title\r\n         const subtitle = d.subtitle\r\n         const startDate = new Date(d.start)\r\n         const endDate = new Date(d.end)\r\n         const kind = d.kind\r\n         const program = d.program\r\n         const collaboratorname = d.collaboratorname\r\n         const collaboratorlink = d.collaboratorlink\r\n         const description = d.description\r\n         const image = d.image\r\n         const link = d.link\r\n         return {\r\n           title,\r\n           subtitle,\r\n           startDate,\r\n           endDate,\r\n           kind,\r\n           program,\r\n           collaboratorname,\r\n           description,\r\n           image,\r\n           link,\r\n           collaboratorlink\r\n         }\r\n       })\r\n     \r\n     const projectdata = projdata(rawData)\r\n\r\n     //get programs\r\n     const programsData = [...d3.rollup(\r\n       projectdata,\r\n       v => v.length,\r\n       d => d.program\r\n     )].map(d => {\r\n       return {\r\n         title: d[0],\r\n         startDate: projectdata\r\n           .filter(x => x.program == d[0])\r\n           .reduce((date,x) => {\r\n             if (date === null || x.startDate < date) return x.startDate;\r\n             return date;\r\n           }, null)\r\n           ,\r\n         endDate: projectdata\r\n           .filter(x => x.program == d[0])\r\n           .reduce((date,x) => {\r\n             if (date === null || x.endDate > date) return x.endDate;\r\n             return date;\r\n           }, null),\r\n           kind: \"program\"\r\n       }\r\n     })\r\n\r\n     const data = projectdata.concat(programsData)\r\n\r\n     const iterate = ((item, index) => {\r\n       item.id = index + 1\r\n     })\r\n\r\n     data.forEach(iterate)\r\n\r\n     //get min and max Date\r\n     const startDates = []\r\n     const endDates = []\r\n\r\n     for (var i = 0; i < projectdata.length; i++) {\r\n       startDates.push(new Date(projectdata[i].startDate))\r\n       endDates.push(new Date(projectdata[i].endDate))\r\n     }\r\n     const minDate = new Date(Math.min.apply(null,startDates))\r\n     const maxDate = new Date(Math.max.apply(null,endDates))\r\n\r\n      var xScale = d3.scaleTime()\r\n      .domain([minDate, maxDate])\r\n      .range([0, width]);\r\n\r\n      var yLineScale = d3.scaleLinear()\r\n      .domain([0, data.length])\r\n      .range([0, height]);\r\n \r\n      var levelsNum;\r\n      d3.select('#visSVG')\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom);\r\n\r\n      d3.selectAll('.timelineBars')\r\n      .transition()\r\n      .duration(1000)\r\n      .attr('x', d => { return xScale(d.startDate) })\r\n      .attr('y', d => { return yLineScale(d.id) })\r\n      .attr('width', d => { return xScale(d.endDate)-xScale(d.startDate) })\r\n      .attr('height', d => {\r\n        if (d.kind !== \"program\") {\r\n          return 3;\r\n        } else {\r\n          return 1;\r\n        }\r\n      })\r\n      .attr(\"fill\", d => {\r\n        if (d.kind !== 'program') {\r\n          return \"url(#projectGradient)\";\r\n        } else {\r\n          return 'rgba(0,0,0,1)' \r\n        }\r\n      })\r\n\r\n      d3.selectAll('.timelineText')\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"transform\", d => { \r\n        if (d.kind !== 'program') {\r\n          return \"translate(\"+ (xScale(d.endDate)-3)+\",\"+(yLineScale(d.id)-2)+\") rotate(22.5)\"\r\n        } else {\r\n          return \"translate(\"+ xScale(d.endDate)+\",\"+(yLineScale(d.id)-4)+\") rotate(0)\"\r\n        }\r\n      })\r\n\r\n      var rectHeight = height / levelsNum;\r\n      \r\n      d3.selectAll('.timelineRect')\r\n      .transition()\r\n      .duration(1000)\r\n      .attr('x', function(d) { return xScale(d.startDateOffset) })\r\n      .attr('y', function(d) {\r\n        if (d.kind == 'program') {\r\n          return yLineScale(d.yPos)-rectHeight;\r\n        } else {\r\n          return  yLineScale(d.yPos)-rectHeight/2;\r\n        }\r\n      })\r\n      .attr('width', function(d) { return xScale(d.endDate)-xScale(d.startDateOffset) })\r\n      .attr('height', function(d) {\r\n        if (d.kind == 'program') {\r\n          return rectHeight;\r\n        } else {\r\n          return  rectHeight/2;\r\n        }\r\n      })\r\n      .attr(\"fill\", d => { return 'rgba(0,0,0,0)'; })\r\n    };\r\n\r\n    const ImageHandler = () => {\r\n      window.addEventListener(\"load\", event => {\r\n        var image = document.querySelector('img');\r\n        var load = image.complete\r\n        console.log(image)\r\n        setLoading(false)\r\n      })  \r\n    }\r\n\r\n    return(\r\n        <body>\r\n        <div id=\"visContainer\" ref={visref}>\r\n        </div>\r\n        <div id='description'>\r\n       <div className=\"descriptionText\" style={{display: (filterproject==false) ? 'none' : ''}}>\r\n            <h2 className=\"descrHead\">{filterproject.subtitle}</h2>\r\n            <div>\r\n            <a href={filterproject.link} target=\"_blank\">\r\n                <h4>{filterproject.title} </h4>\r\n            </a>\r\n            </div>\r\n            <h4>{filterproject.start} | {filterproject.kind}</h4>\r\n            <div>\r\n            {filterproject!==false ? <div className=\"gallery\"> <ImageGallery items={filterproject.image} showPlayButton={false} showNav={false}/></div> : <div className=\"lds-ellipsis\" ><div></div><div></div><div></div><div></div></div>}\r\n            </div>\r\n            <div>\r\n              <a href={filterproject.collaboratorlink} target=\"_blank\">\r\n                <h4 id='introText'>Collaborator {filterproject.collaboratorname}</h4>\r\n              </a>\r\n            </div>\r\n            {filterproject.description}\r\n        </div>\r\n      <div id='introText' style={{display: (filterproject!=false) ? 'none' : ''}}>\r\n        <h2 className=\"descrHead\">Simon Palmer</h2>\r\n        <h4 className=\"Occupation\">Architect | Technologist | Entrepreneur </h4>\r\n        <p> Simon Palmer is passionate about combining art and science to innovate society in the built and virtual environments. As a technologist with a background as an architect of the built environment, and as a certified blockchain developer, his creativity explores the intersection of the arts, culture and science in the physical environment and on the web.</p>\r\n        <p>Above is a meta-visualization of selected architectural projects (firm), software and virtual projects (soft), installations, conferences and others. Explorable as a grid and as a timeline, it offers a chance to reflect on connections Simon has made, which guide and influence his current makings.</p>\r\n        <p>Simon is Australian and lives currently in the US. He holds a BA and MA in Architecture and is a registered architect. He also has various accreditations including as a Blockchain developer by the Consensys Academy and the NEAR protocol. As a technologist, entrepreneur and architect, Simon explores the boundaries of spatial knowledge and interaction in the post-digital age.</p>\r\n      </div>\r\n      </div>\r\n      <div id='footer'>\r\n        <footer>\r\n          <div class='footer'>\r\n            <a href=\"mailto:palmer.simond@gmail.com\"> Email</a>,\r\n            <a href=\"https://www.linkedin.com/in/simon-palmer-profile/\" target=\"_blank\"> LinkedIn</a>,\r\n            <a href=\"https://twitter.com/sim_palmer\" target=\"_blank\"> Twitter</a>,\r\n            <a href=\"https://t.me/simondpalmer\" target=\"_blank\"> Telegram</a> or \r\n            <a href=\"https://github.com/simondpalmer\" target=\"_blank\"> GitHub</a>\r\n            &nbsp; || &nbsp; &copy; Simon Palmer\r\n          </div>\r\n        </footer>\r\n      </div>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default VisApp","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\grid\\components\\Projects.js",["73"],"import React, { useRef } from \"react\";\r\n\r\nconst Project = (props) => { \r\n    const {projectClick, project} = props;\r\n\r\n        return (\r\n            <div className={`lineDiv gridItem y${project.start}-${project.end} ${project.kind}`} style={{positon: \"absolute\"}} onClick={projectClick}>\r\n            <h5>{project.title}</h5>\r\n            <br></br>\r\n            <p className=\"year\">\r\n            <span className=\"yearsstart\">{project.start.substring(0,7)}</span> - <span className=\"yearsend\">{project.end.substring(0,7)}</span>\r\n            <br></br>\r\n            <span className=\"kind\">{project.kind}</span>\r\n            </p>\r\n            </div>\r\n        )\r\n    }\r\nexport default Project","C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\data\\projectsData.js",[],"C:\\Users\\Simon Palmer\\Documents\\Programming\\folio\\src\\vis\\components\\Gallery.js",["74","75"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport ImageGallery from 'react-image-gallery';\r\nimport '../css/spinner.css';\r\n\r\nconst Gallery = (props) => { \r\n    const {images} = props;\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    if (loading) {\r\n        return <ImageGallery items={images} onImageLoad={() => setLoading(false)}/>\r\n    }\r\n        return (\r\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>)\r\n}\r\nexport default Gallery",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"84","line":1,"column":25,"nodeType":"82","messageId":"83","endLine":1,"endColumn":34},{"ruleId":"80","severity":1,"message":"85","line":1,"column":36,"nodeType":"82","messageId":"83","endLine":1,"endColumn":44},{"ruleId":"80","severity":1,"message":"86","line":1,"column":46,"nodeType":"82","messageId":"83","endLine":1,"endColumn":57},{"ruleId":"80","severity":1,"message":"87","line":5,"column":3,"nodeType":"82","messageId":"83","endLine":5,"endColumn":14},{"ruleId":"80","severity":1,"message":"88","line":6,"column":3,"nodeType":"82","messageId":"83","endLine":6,"endColumn":13},{"ruleId":"80","severity":1,"message":"89","line":7,"column":3,"nodeType":"82","messageId":"83","endLine":7,"endColumn":12},{"ruleId":"80","severity":1,"message":"90","line":8,"column":3,"nodeType":"82","messageId":"83","endLine":8,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":31,"column":5,"nodeType":"93","endLine":31,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":36,"column":5,"nodeType":"93","endLine":36,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":77,"column":15,"nodeType":"93","messageId":"96","endLine":77,"endColumn":72,"fix":"97"},{"ruleId":"98","severity":1,"message":"99","line":83,"column":58,"nodeType":"100","messageId":"101","endLine":83,"endColumn":60},{"ruleId":"80","severity":1,"message":"102","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":15},{"ruleId":"80","severity":1,"message":"103","line":11,"column":10,"nodeType":"82","messageId":"83","endLine":11,"endColumn":19},{"ruleId":"80","severity":1,"message":"104","line":12,"column":10,"nodeType":"82","messageId":"83","endLine":12,"endColumn":18},{"ruleId":"80","severity":1,"message":"105","line":194,"column":11,"nodeType":"82","messageId":"83","endLine":194,"endColumn":18},{"ruleId":"80","severity":1,"message":"106","line":195,"column":11,"nodeType":"82","messageId":"83","endLine":195,"endColumn":19},{"ruleId":"80","severity":1,"message":"107","line":197,"column":11,"nodeType":"82","messageId":"83","endLine":197,"endColumn":21},{"ruleId":"98","severity":1,"message":"108","line":361,"column":20,"nodeType":"100","messageId":"101","endLine":361,"endColumn":22},{"ruleId":"98","severity":1,"message":"108","line":369,"column":20,"nodeType":"100","messageId":"101","endLine":369,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":376,"column":8,"nodeType":"111","endLine":376,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":394,"column":15,"nodeType":"111","endLine":394,"endColumn":27,"suggestions":"114"},{"ruleId":"98","severity":1,"message":"108","line":442,"column":35,"nodeType":"100","messageId":"101","endLine":442,"endColumn":37},{"ruleId":"98","severity":1,"message":"108","line":449,"column":35,"nodeType":"100","messageId":"101","endLine":449,"endColumn":37},{"ruleId":"98","severity":1,"message":"108","line":531,"column":20,"nodeType":"100","messageId":"101","endLine":531,"endColumn":22},{"ruleId":"98","severity":1,"message":"108","line":539,"column":20,"nodeType":"100","messageId":"101","endLine":539,"endColumn":22},{"ruleId":"80","severity":1,"message":"115","line":548,"column":11,"nodeType":"82","messageId":"83","endLine":548,"endColumn":23},{"ruleId":"80","severity":1,"message":"116","line":551,"column":13,"nodeType":"82","messageId":"83","endLine":551,"endColumn":17},{"ruleId":"98","severity":1,"message":"108","line":562,"column":72,"nodeType":"100","messageId":"101","endLine":562,"endColumn":74},{"ruleId":"94","severity":1,"message":"95","line":565,"column":13,"nodeType":"93","messageId":"96","endLine":565,"endColumn":58,"fix":"117"},{"ruleId":"94","severity":1,"message":"95","line":574,"column":15,"nodeType":"93","messageId":"96","endLine":574,"endColumn":72,"fix":"118"},{"ruleId":"98","severity":1,"message":"99","line":580,"column":58,"nodeType":"100","messageId":"101","endLine":580,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":592,"column":13,"nodeType":"93","messageId":"96","endLine":592,"endColumn":89,"fix":"119"},{"ruleId":"94","severity":1,"message":"95","line":593,"column":13,"nodeType":"93","messageId":"96","endLine":593,"endColumn":70,"fix":"120"},{"ruleId":"94","severity":1,"message":"95","line":594,"column":13,"nodeType":"93","messageId":"96","endLine":594,"endColumn":65,"fix":"121"},{"ruleId":"94","severity":1,"message":"95","line":595,"column":13,"nodeType":"93","messageId":"96","endLine":595,"endColumn":71,"fix":"122"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"84","line":1,"column":25,"nodeType":"82","messageId":"83","endLine":1,"endColumn":34},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'BrowserView' is defined but never used.","'MobileView' is defined but never used.","'isBrowser' is defined but never used.","'isMobile' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"125","text":"126"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Gallery' is defined but never used.","'isLoading' is assigned a value but never used.","'projects' is assigned a value but never used.","'bgGroup' is assigned a value but never used.","'netGroup' is assigned a value but never used.","'pointGroup' is assigned a value but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dimensions.documentHeight' and 'dimensions.documentWidth'. Either include them or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has a missing dependency: 'updateVis'. Either include it or remove the dependency array.",["128"],"'ImageHandler' is assigned a value but never used.","'load' is assigned a value but never used.",{"range":"129","text":"126"},{"range":"130","text":"126"},{"range":"131","text":"126"},{"range":"132","text":"126"},{"range":"133","text":"126"},{"range":"134","text":"126"},"no-global-assign","no-unsafe-negation",[3356,3356]," rel=\"noreferrer\"",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},[17114,17114],[17637,17637],[19378,19378],[19463,19463],[19542,19542],[19631,19631],"Update the dependencies array to be: [dimensions.documentHeight, dimensions.documentWidth]",{"range":"139","text":"140"},"Update the dependencies array to be: [dimensions, updateVis]",{"range":"141","text":"142"},[11337,11339],"[dimensions.documentHeight, dimensions.documentWidth]",[11950,11962],"[dimensions, updateVis]"]